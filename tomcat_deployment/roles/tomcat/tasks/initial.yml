---

#  - name: add group "tomcat"
#    group: name=tomcat

#  - name: add user "tomcat"
#    user: name=tomcat group=tomcat home=/opt/tomcat/{{tomcat_directory_name}} createhome=no
#    become: True
#    become_method: sudo

  - name: creating tomcat directory
    file: path=/opt/tomcat state=directory
    become: yes
    become_method: sudo

#  - name: getting tomcat tar file and untar tomcat tar file with permissions
#    unarchive: src="/root/apache-tomcat-8.0.43.tar.gz" dest=/opt/tomcat/ remote_src=yes mode=u+x

  - name: getting tomcat tar file and untar tomcat tar file with permissions
    unarchive: src="http://archive.apache.org/dist/tomcat/tomcat-8/v8.5.13/bin/apache-tomcat-8.5.13.tar.gz" dest=/opt/tomcat/ remote_src=yes mode=u+x

  - name: rename tomcat directory
    shell: mv /opt/tomcat/apache-tomcat-8.5.13 /opt/tomcat/{{tomcat_directory_name}}

  - name: creating symlink between apache-tomcat and latest
    file: dest=/opt/tomcat/latest src=/opt/tomcat/{{tomcat_directory_name}} state=link

  - name: changing ownership of tomcat directory
    file: path=/opt/tomcat/{{tomcat_directory_name}} owner=tomcat group=tomcat state=directory recurse=yes


  - name: creating setenv.sh file and adding properties to it
    lineinfile: dest=/opt/tomcat/{{tomcat_directory_name}}/bin/setenv.sh state=present create=yes mode=0777 line="#!/bin/bash\nCATALINA_HOME=/opt/tomcat/{{tomcat_directory_name}}\nCATALINA_BASE=/opt/tomcat/{{tomcat_directory_name}}\nPATH=$CATALINA_HOME/bin:$PATH\nPATH=$CATALINA_BASE/bin:$PATH\nJAVA_OPTS=\"-Xms512M -Xmx2048M -XX:MaxPermSize=128m\"\nJAVA_OPTS=\"$JAVA_OPTS -Dspring.profiles.active={{environmentt|upper}}\""


  - name: giving permissions to tomcat folder recursively
    file: path=/opt/tomcat/{{tomcat_directory_name}} mode=u+x recurse=yes

  - name: Cleaning up reference Apps
    shell: rm -rf /opt/tomcat/{{tomcat_directory_name}}/webapps/{{item}}
    with_items:
    - docs
    - examples

  - copy: src="{{artifact_url}}" dest=/tmp/ mode=0755 owner=tomcat group=tomcat force=yes
#  - shell: echo $(basename "{{artifact_url}}")
  - shell: mv $(basename "{{artifact_url}}") {{context}}.war
    args:
      chdir: /tmp
  - name: donwloading latest artifact
    copy: src=/tmp/{{context}}.war dest=/opt/tomcat/{{tomcat_directory_name}}/webapps/ remote_src=yes mode=0755 owner=tomcat group=tomcat force=yes
  - file: path=/tmp/{{context}}.war state=absent

  - name: change default port for tomcat
    replace: dest=/opt/tomcat/{{tomcat_directory_name}}/conf/server.xml regexp="8080" replace="{{http_port}}"

  - name: deploy iptables rules
    template: src=iptables-save dest=/etc/sysconfig/iptables
    when: "ansible_os_family == 'RedHat' and ansible_distribution_major_version == '6'"
    notify: restart iptables

  - name: adding tomcat port to iptables
    firewalld: port={{item}}/tcp permanent=true zone=public state=enabled
    with_items:
      - "{{http_port}}"
      - "{{https_port}}"
#    become: yes
#    become_method: sudo
    when: "ansible_os_family == 'RedHat' and ansible_distribution_major_version == '7'"

  - name: configuring tomcat users
    template: src=tomcat-users.xml dest=/opt/tomcat/{{tomcat_directory_name}}/conf/

#  - name: saving iptables
#    shell: firewall-cmd --reload
#    become: yes
#    become_method: sudo

  - name: install tomcat as service
    copy: src=tomcat-init-script.sh dest=/etc/init.d/tomcat mode=0755

  - name: Start Tomcat
    service: name=tomcat state=started enabled=yes

  - name: wait for tomcat to start
    wait_for: port={{http_port}}
